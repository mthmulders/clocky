name: Run tests

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]
    types: [opened, synchronize, reopened]

jobs:
  build:
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macOS-latest]
        java: [8, 11, 15, 16-ea]
      fail-fast: false

    runs-on: ${{ matrix.os }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up JDK
        uses: actions/setup-java@v1
        with:
          java-version: ${{ matrix.java }}

      - name: Set up cache for ~./m2/repository
        uses: actions/cache@v1
        with:
          path: ~/.m2/repository
          key: clocky-${{ matrix.os }}-java${{ matrix.java }}-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            clocky-${{ matrix.os }}-clocky-{{ matrix.java }}
            clocky-${{ matrix.os }}

      - name: Build and test code
        run: mvn verify

  mutationtesting:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2
        with:
          # Disabling shallow clone is recommended for improving relevancy of reporting
          fetch-depth: 0

      - name: Set up cache for ~./m2/repository
        uses: actions/cache@v1
        with:
          path: ~/.m2/repository
          key: clocky-ubuntu-latest-java11-${{ hashFiles('**/pom.xml') }}

      - name: Set up JDK
        uses: actions/setup-java@v1
        with:
          java-version: 11

      - name: Run Pitest
        run: mvn test-compile org.pitest:pitest-maven:mutationCoverage

      - name: Upload mutation test report
        run: ./.github/upload-mutation-report.sh
        env:
          API_KEY: ${{ secrets.STRYKER_DASHBOARD_TOKEN }}

  sonarcloud:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2
        with:
          # Disabling shallow clone is recommended for improving relevancy of reporting
          fetch-depth: 0

      - name: Set up cache for ~./m2/repository
        uses: actions/cache@v1
        with:
          path: ~/.m2/repository
          key: clocky-ubuntu-latest-java11-${{ hashFiles('**/pom.xml') }}

      - name: Set up JDK
        uses: actions/setup-java@v1
        with:
          java-version: 11

      - name: SonarCloud Scan
        run: mvn -P sonarcloud -Dsonar.login=$SONAR_TOKEN verify sonar:sonar
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}